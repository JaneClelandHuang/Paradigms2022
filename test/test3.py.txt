# Strategy Pattern implemented
import pandas as pd
from abc import ABC, abstractmethod
from SortBehavior import *
from FilterBehavior import *
from DisplayBehavior import *

class Data(ABC): 
    def __init__(self,sortBehavior, filterBehavior, displayBehavior):
        super().__init__()
        self.sortBehavior = sortBehavior
        self.filterBehavior = filterBehavior
        self.displayBehavior = displayBehavior

    data = ""
    
    def import_data(self):    
        self.data = pd.read_csv('https://example.com/passkey=wedsmdjsjmdd')

    @abstractmethod
    def sort(self):
        pass
        
    def filter(self):
        self.quackBehavior.quack()
    
    def display(self):
        self.flyBehavior.fly()

class Detailer(): 
    def display(self):
        print ("I'm a detailer class")
    
class Summarizer():
    def display(self):
        print ("I'm a Summarizer")
        
